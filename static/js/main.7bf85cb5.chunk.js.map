{"version":3,"sources":["season.js","spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","Season","props","lat","month","seasonResult","season","Date","getMonth","_seasonConfig$seasonR","react_default","a","createElement","className","concat","Spinner","message","defaultProps","App","state","errorMessage","_this2","this","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","error","src_season","spinner","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"4LAGMA,SAAe,CACjBC,OAAQ,CACJC,KAAM,2BACNC,SAAU,OAEdC,OAAQ,CACJF,KAAM,oBACNC,SAAU,eAyBHE,EAZA,SAACC,GACZ,IAVeC,EAAKC,EAUdC,GAVSF,EAUgBD,EAAMI,QAVjBF,GAUyB,IAAIG,MAAOC,YAT7C,GAAKJ,EAAQ,EACbD,EAAM,EAAI,SAAW,SAGrBA,EAAM,EAAI,SAAW,UAIVM,EAEGb,EAAaS,GAA/BP,EAFeW,EAEfX,KAAMC,EAFSU,EAETV,SACb,OACIW,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAC,OAAoBT,IAC9BK,EAAAC,EAAAC,cAAA,KAAGC,UAAS,qBAAAC,OAAuBf,EAAvB,WACZW,EAAAC,EAAAC,cAAA,UAAKd,GACLY,EAAAC,EAAAC,cAAA,KAAGC,UAAS,sBAAAC,OAAwBf,EAAxB,aC5BlBgB,EAAU,SAAAb,GACZ,OACIQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0BX,EAAMc,WAK3DD,EAAQE,aAAe,CACnBD,QAAS,cAGED,QCTTG,6MACFC,MAAQ,CACJhB,IAAK,KACLiB,aAAc,uFAGC,IAAAC,EAAAC,KACfC,OAAOC,UAAUC,YAAYC,mBACzB,SAAAC,GAAQ,OAAIN,EAAKO,SAAS,CAAEzB,IAAKwB,EAASE,OAAOC,YACjD,SAAAC,GAAK,OAAIV,EAAKO,SAAS,CAAER,aAAcW,EAAMf,6CAMjD,OAAGM,KAAKH,MAAMhB,MAAQmB,KAAKH,MAAMC,aACtBV,EAAAC,EAAAC,cAACoB,EAAD,CAAQ1B,OAAUgB,KAAKH,MAAMhB,OAGpCmB,KAAKH,MAAMhB,KAAOmB,KAAKH,MAAMC,aACtBV,EAAAC,EAAAC,cAAA,qBAAaU,KAAKH,MAAMC,cAG5BV,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACqB,EAAD,cAvBFC,aA2BlBC,IAASC,OAAO1B,EAAAC,EAAAC,cAACyB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.7bf85cb5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './season.css';\r\n\r\nconst seasonConfig = {\r\n    summer: {\r\n        text: \"Let's head to the beach!\",\r\n        iconName: 'sun'\r\n    },\r\n    winter: {\r\n        text: \"Burr, it is cold!\",\r\n        iconName: 'snowflake'\r\n    }\r\n}\r\n\r\nconst getSeason = (lat, month) => {\r\n    if(month > 2 && month < 9){\r\n        return lat > 0 ? 'summer' : 'winter';\r\n    }\r\n    else {\r\n        return lat > 0 ? 'winter' : 'summer';\r\n    }\r\n};\r\n\r\nconst Season = (props) => {\r\n    const seasonResult = getSeason(props.season, new Date().getMonth());\r\n    const {text, iconName} = seasonConfig[seasonResult];\r\n    return(\r\n        <div className={`season-display ${seasonResult}`}>\r\n            <i className={`icon-left massive ${iconName} icon`} />\r\n            <h1>{text}</h1>\r\n            <i className={`icon-right massive ${iconName} icon`} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Season;","import React from 'react';\r\n\r\nconst Spinner = props => {\r\n    return (\r\n        <div className=\"ui active dimmer\">\r\n            <div className=\"ui massive text loader\">{props.message}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nSpinner.defaultProps = {\r\n    message: 'Loading...'\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Season from './season';\r\nimport Spinner from './spinner';\r\n\r\nclass App extends Component{\r\n    state = {\r\n        lat: null,\r\n        errorMessage: ''\r\n    };\r\n       \r\n    componentDidMount(){\r\n        window.navigator.geolocation.getCurrentPosition(\r\n            position => this.setState({ lat: position.coords.latitude }), \r\n            error => this.setState({ errorMessage: error.message })\r\n        );\r\n    }\r\n\r\n    render(){\r\n\r\n        if(this.state.lat && !this.state.errorMessage){\r\n            return <Season season = {this.state.lat}/>\r\n        }  \r\n\r\n        if(!this.state.lat && this.state.errorMessage){\r\n            return <div>Error: {this.state.errorMessage}</div>;\r\n        }\r\n\r\n        return <div><Spinner /></div>;\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}